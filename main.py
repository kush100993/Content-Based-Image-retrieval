from cbir.vlad import VLADEngine
from cbir import utils
import glob
import pickle

#creating object of VLADEngine class 
engine = VLADEngine()


#k-means is already performed and codebooks are already generated, if wanted to create new codebooks perform under the below section again

#------------------------------------------- Training and codebook genertion ----------------------------------------

"""Training k-means for clustring the descriptors
   input_arguments: k = no of clusters 
				    limit = no of images for creating clusters."""
#engine.train(16,500)


"""This function generates a collectiion of vlad descriptor.
   input_argument: no_of_images = total images to take for our databse.
				   path = directory of images to be included in our database."""
#data = engine.vlad_collection()


"""Dimentionality reduction of our descriptors
   input_arguments: data = data generated by vlad_collection()"""
#pca_data = engine.apply_PCA(data)


#Generates codebook and codes using product quantization
#engine.gen_codebook(pca_data)

#--------------------------------------------- Image insertion and query image search --------------------------------

#Given a query image search through the database to find the k closest match.	
closest_matches = engine.Query(path = './images/lenna.jpg',k = 15)
print(closest_matches)

#Insert more images in our database to match with a query image.
for image in glob.glob('./images/lenna/*.jpg'):
	engine.insert(image)

closest_matches = engine.Query(path = './images/lenna.jpg',k = 15)
print(closest_matches)
